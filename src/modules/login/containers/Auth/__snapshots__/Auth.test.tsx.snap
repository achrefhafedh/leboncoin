// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders and execute function without crashing render without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AuthContainer
    login={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2>
          Login to your account
        </h2>,
        <div
          className="form"
        >
          <input
            onChange={[Function]}
            placeholder="username"
            title="username"
            type="text"
          />
          <input
            onChange={[Function]}
            placeholder="password"
            title="username"
            type="password"
          />
          <button
            className="btn"
            onClick={[Function]}
          >
            Login
          </button>
          <div
            className="guest"
            onClick={[Function]}
          >
            Guest
          </div>
        </div>,
      ],
      "className": "log-form",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Login to your account",
        },
        "ref": null,
        "rendered": "Login to your account",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              onChange={[Function]}
              placeholder="username"
              title="username"
              type="text"
            />,
            <input
              onChange={[Function]}
              placeholder="password"
              title="username"
              type="password"
            />,
            <button
              className="btn"
              onClick={[Function]}
            >
              Login
            </button>,
            <div
              className="guest"
              onClick={[Function]}
            >
              Guest
            </div>,
          ],
          "className": "form",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "onChange": [Function],
              "placeholder": "username",
              "title": "username",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "onChange": [Function],
              "placeholder": "password",
              "title": "username",
              "type": "password",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Login",
              "className": "btn",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Login",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Guest",
              "className": "guest",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Guest",
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            Login to your account
          </h2>,
          <div
            className="form"
          >
            <input
              onChange={[Function]}
              placeholder="username"
              title="username"
              type="text"
            />
            <input
              onChange={[Function]}
              placeholder="password"
              title="username"
              type="password"
            />
            <button
              className="btn"
              onClick={[Function]}
            >
              Login
            </button>
            <div
              className="guest"
              onClick={[Function]}
            >
              Guest
            </div>
          </div>,
        ],
        "className": "log-form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Login to your account",
          },
          "ref": null,
          "rendered": "Login to your account",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                onChange={[Function]}
                placeholder="username"
                title="username"
                type="text"
              />,
              <input
                onChange={[Function]}
                placeholder="password"
                title="username"
                type="password"
              />,
              <button
                className="btn"
                onClick={[Function]}
              >
                Login
              </button>,
              <div
                className="guest"
                onClick={[Function]}
              >
                Guest
              </div>,
            ],
            "className": "form",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onChange": [Function],
                "placeholder": "username",
                "title": "username",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onChange": [Function],
                "placeholder": "password",
                "title": "username",
                "type": "password",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Login",
                "className": "btn",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Login",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Guest",
                "className": "guest",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Guest",
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
